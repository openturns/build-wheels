name: Stable
on: [push, pull_request]
jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          docker pull openturns/manylinux2014_x86_64
          docker run --rm -e MAKEFLAGS='-j4' -v `pwd`:/io openturns/manylinux2014_x86_64 /io/build-wheels-linux.sh openturns v1.23 cp38
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
      - name: Upload
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash -l {0}
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          conda install -y twine
          twine upload --non-interactive wheelhouse/*.whl

  mingw:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          docker pull openturns/archlinux-mingw
          docker run --rm -e MAKEFLAGS='-j4' -v `pwd`:/io openturns/archlinux-mingw /io/build-wheels-mingw.sh openturns v1.23 cp38
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
      - name: Upload
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash -l {0}
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          conda install -y twine
          twine upload --non-interactive wheelhouse/*.whl

  macos:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build
        env:
          MAKEFLAGS: -j3
        run: ./build-wheels-macos.sh openturns v1.23 cp38
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
      - name: Upload
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash -l {0}
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          conda install -y twine
          twine upload --non-interactive wheelhouse/*.whl
